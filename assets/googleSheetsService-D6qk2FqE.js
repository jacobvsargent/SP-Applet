const S="https://script.google.com/macros/s/AKfycbxbR-jT18qRuiXiWUdd_Klj_SEP0sYiNor24ETsic7PBBbu8kDaRC6brVX-yMiIUDZ9/exec";const l=n=>new Promise(a=>setTimeout(a,n));async function r(n,a={}){const t=`${S}?action=${n}`;try{const o=await fetch(t,{method:"POST",redirect:"follow",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!o.ok)throw new Error(`Request failed: ${o.statusText}`);return await o.json()}catch(o){return console.warn("CORS request failed, using no-cors fallback:",o.message),await fetch(t,{method:"POST",mode:"no-cors",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),{success:!0}}}async function R(n){const a=`${S}?action=${n}`,t=await fetch(a,{method:"GET"});if(!t.ok)throw new Error(`Request failed: ${t.statusText}`);return await t.json()}async function d(n){await r("setInputs",n),await l(200)}async function e(n,a){await r("writeFormula",{cell:n,formula:a}),await l(200)}async function i(n,a){await r("setValue",{cell:n,value:a}),await l(200)}async function c(n){await r("runScenario",{function:n}),await l(200)}async function C(){await r("forceRecalc"),await l(200)}async function f(n,a){console.log("üìÅ Creating workbook copy:",n,a);const t=await r("createWorkbookCopy",{scenarioName:n,userInputs:a});return console.log("üìÅ Workbook copy result:",t),t.folderUrl?(console.log("üìÇ FOLDER URL:",t.folderUrl),console.log("üìÑ FILE URL:",t.fileUrl)):console.log("üìÅ Failed to create workbook copy - or at least no URL"),await l(200),{success:!0}}async function u(){return await C(),await R("getOutputs")}async function w(n){return(await R(`getValue&cell=${n}`)).value}async function T(){await r("cleanup"),await l(200)}async function D(n,a){a(10,"Setting up baseline scenario..."),await d(n),a(15,"Capturing baseline results...");const t=await u();return a(18,"Saving Do Nothing workbook..."),await f("1 - Do Nothing",n),t}async function O(n,a){a(20,"Running Solar Only scenario..."),await e("F47","=F51"),await c("solveForITC"),a(30,"Capturing Solar Only results...");const t=await u();return a(33,"Saving Solar Only workbook..."),await f("2 - Solar Only",n),t}async function h(n,a){a(35,"Running Donation Only scenario (Maximum)..."),await i("B43",0),await i("F47",0),await e("C92","=MAX(0, B92)"),await i("C90",.6),a(42,"Capturing Donation Only maximum...");const t=await u();a(47,"Running Donation Only scenario (Minimum)..."),await i("C90",.3),a(50,"Capturing Donation Only minimum...");const o=await u();return await i("C90",.6),a(53,"Saving Donation Only workbook..."),await f("3 - Donation Only",n),{max:t,min:o}}async function k(n,a){a(55,"Running Solar + Donation (No Refund) - Maximum..."),await e("C92","=MAX(0, B92)"),await i("C90",.6),await e("F47","=F51"),await c("solveForITC"),await w("F51")<0?(await i("F47",0),await c("solveForITC")):await e("F47","=F51"),a(62,"Capturing Solar + Donation (No Refund) maximum...");const o=await u();a(67,"Running Solar + Donation (No Refund) - Minimum..."),await i("C90",.3),await w("F51")<0?(await i("F47",0),await c("solveForITC")):await e("F47","=F51"),a(70,"Capturing Solar + Donation (No Refund) minimum...");const m=await u();return await i("C90",.6),a(73,"Saving Solar + Donation (No Refund) workbook..."),await f("4 - Solar + Donation (No Refund)",n),{max:o,min:m}}async function p(n,a){a(75,"Running Solar + Donation (With Refund) - Maximum..."),await e("C92","=MAX(0, B92)"),await i("C90",.6),await e("F47","=F51"),await c("solveForITCRefund"),await w("F51")<0?(await i("F47",0),await c("solveForITCRefund")):await e("F47","=F51");const o=await w("G49");await i("G47",o),a(82,"Capturing Solar + Donation (With Refund) maximum...");const s=await u();a(87,"Running Solar + Donation (With Refund) - Minimum..."),await e("G47","0"),await i("C90",.3),await w("F51")<0?(await i("F47",0),await c("solveForITCRefund")):await e("F47","=F51");const y=await w("G49");await i("G47",y),a(90,"Capturing Solar + Donation (With Refund) minimum...");const F=await u();return await i("C90",.6),a(93,"Saving Solar + Donation (With Refund) workbook..."),await f("5 - Solar + Donation (With Refund)",n),{max:s,min:F}}async function M(n,a){try{a(0,"Setting up your analysis..."),a(10,"Setting up inputs..."),await d(n),a(20,"Running Solar + Donation (With Refund)...");const t=await p(n,a);return a(96,"Finalizing results..."),a(100,"Analysis complete!"),{scenario1:null,scenario2:null,scenario3:null,scenario4:null,scenario5:t}}catch(t){throw console.error("Error running scenario 5:",t),t}}async function g(n,a){try{a(0,"Setting up your analysis..."),a(10,"Running Scenario 1: Baseline...");const t=await D(n,a);a(20,"Running Scenario 2: Solar Only...");const o=await O(n,a);a(35,"Running Scenario 3: Donation Only...");const s=await h(n,a);a(55,"Running Scenario 4: Solar + Donation (No Refund)...");const m=await k(n,a);a(75,"Running Scenario 5: Solar + Donation (With Refund)...");const y=await p(n,a);return a(96,"Finalizing results..."),await T(),a(100,"Analysis complete!"),{scenario1:t,scenario2:o,scenario3:s,scenario4:m,scenario5:y}}catch(t){throw console.error("Error running scenarios:",t),t}}export{c as callFunction,T as cleanup,f as createWorkbookCopy,C as forceRecalculation,u as getOutputs,w as getValue,g as runAllScenarios,D as runScenario1,O as runScenario2,h as runScenario3,k as runScenario4,p as runScenario5,M as runScenario5Only,d as setUserInputs,i as setValue,e as writeFormula};
